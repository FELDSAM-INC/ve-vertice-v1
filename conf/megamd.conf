megam:
  home: /var/lib/megam/megamd/
  debug: true
  logfile: megamd.log
  riak: localhost:8087
  api:  http://api.megam.io/v2
  amqp: amqp://guest:guest@localhost:5672/
chef:
  knife: /var/lib/megam/megamd/chef-repo/.chef/knife.rb
  recipe: megam_run
  riak: api.megam.io
  amqp: console.megam.io
  monitor: monitor.megam.co.in
  kibana: monitor.megam.co.in
#
# Below are settings for the swarm provisioneru in a clustered environment.
#    * cluster:   list of swarm clusters. Used in non-segregated mode (see
#                  segregate for more details).
#    * registry:  the registry url
#    * namespace: the namespace to use in Docker images. For instance, an app named
#                  blog will have an image
#                  <namespace>/blog.
#    * segregate: indicates whether megamd should use a scheduler that
#                  segregates containers among swarm nodes. When using this
#                  scheduler, each team will have a group of swarm nodes and
#                  megamd will spawn new containers for that team only on these
#                  nodes. This scheduler can be used to segregate subnets per
#                  team.
#    * scheduler: configuration for the scheduler. In order to make the
#                  cluster run faster, it's recommended to use the Redis
#                  storage. It will store the relation between containers and
#                  nodes.
docker:
 # registry: docker-registry.company.com
 #   namespace: megam
  cluster:
    enabled: true
    master
      - http://192.168.1.241:2375
    subnet: 103.56.93.1/24
    bridge: megdock
    gateway: 103.56.92.1
    memory: 2147483648
    swap: 2097152999
    cpuperiod: 25000
    cpuquota: 25000
  segregate: false
opennebula:
  access_key: jbvkdsfgifbkjfkej
  secret_key: kfdhfvfbvdfjkvn
  template: megam_trusty
  ssh_user: root
  identity_file: /var/lib/megam
  zone: chennai
dns:
  enabled: true
  aws_accesskey: accesskey
  aws_secretkey: secretkey
